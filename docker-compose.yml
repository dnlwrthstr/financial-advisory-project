services:
  kafka:
    image: confluentinc/cp-kafka:7.6.5
    container_name: kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    command: 
      - bash 
      - -c 
      - |
        echo "Generating cluster ID"
        export CLUSTER_ID=$(/usr/bin/kafka-storage random-uuid)
        echo "Using cluster ID: $$CLUSTER_ID"
        echo "$$CLUSTER_ID" > /var/lib/kafka/clusterID
        mkdir -p /var/lib/kafka/data
        chmod -R 777 /var/lib/kafka
        /usr/bin/kafka-storage format -t $$CLUSTER_ID -c /etc/kafka/kraft/server.properties
        exec /etc/confluent/docker/run
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9093:9093"
    volumes:
      - kafka_data:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  opensearch:
    image: opensearchproject/opensearch:2.11.0
    container_name: financial-advisory-opensearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_SECURITY_PLUGIN=true"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9201:9200"
      - "9601:9600"
    volumes:
      - opensearch_data:/usr/share/opensearch/data

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.0
    container_name: financial-advisory-opensearch-dashboards
    ports:
      - "5602:5601"
    environment:
      - OPENSEARCH_HOSTS=["http://financial-advisory-opensearch:9200"]
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    depends_on:
      - opensearch

  custodian-service:
    build: ./custodian-service
    container_name: custodian-service
    ports:
      - "8010:8000"
    environment:
      - MONGODB_URL=mongodb://mongo:27017
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TRANSACTION_TOPIC=custodian.transactions
      - KAFKA_CUSTODIAN_TOPIC=custodian.custodian
      - KAFKA_ENABLED=true
    depends_on:
      - mongo
      - kafka

  search-service:
    build: ./search-service
    container_name: search-service
    ports:
      - "8020:8000"
    environment:
      - CUSTODIAN_SERVICE_URL=http://custodian-service:8000/api
      - OPENSEARCH_HOST=financial-advisory-opensearch
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_USE_SSL=false
    depends_on:
      - custodian-service
      - opensearch

  load-custodian-service:
    build: ./load-custodian-service
    container_name: load-custodian-service
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TRANSACTION_TOPIC=custodian.transactions
      - KAFKA_CUSTODIAN_TOPIC=custodian.custodian
      - KAFKA_GROUP_ID=load-custodian-service
      - OPENSEARCH_HOST=financial-advisory-opensearch
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_USE_SSL=false
    depends_on:
      - kafka
      - opensearch

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3002:3002"
    environment:
      - VITE_API_URL=http://localhost:8010/api
      - VITE_SEARCH_API_URL=http://localhost:8020/graphql
    depends_on:
      - custodian-service
      - search-service

  load-portfolio-service:
    build: ./load-portfolio-service
    container_name: load-portfolio-service
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_PORTFOLIO_TOPIC=custodian.portfolio
      - KAFKA_GROUP_ID=load-portfolio-service
      - OPENSEARCH_HOST=financial-advisory-opensearch
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_USE_SSL=false
    depends_on:
      - kafka
      - opensearch

  load-position-service:
    build: ./load-position-service
    container_name: load-position-service
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_POSITION_TOPIC=custodian.position
      - KAFKA_GROUP_ID=load-position-service
      - OPENSEARCH_HOST=financial-advisory-opensearch
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_USE_SSL=false
    depends_on:
      - kafka
      - opensearch

volumes:
  kafka_data:
  mongo_data:
  opensearch_data:
